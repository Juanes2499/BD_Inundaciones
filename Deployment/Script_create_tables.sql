/*
    Autor:          Juan Esteban Nichoy Larrañaga
    Fecha:          25/01/2021
    Ejecutar en:    Script para Dockerfile
    Descripción:    Crear tablas
*/

/*Tabla NODO_SENSOR*/
DROP TABLE IF EXISTS `NODO_SENSOR`;
CREATE TABLE IF NOT EXISTS `NODO_SENSOR` (
  	`ID_NODO_SENSOR` varchar(100) NOT NULL,
	`TOKEN` longtext NOT NULL,
	`LATITUD` double NOT NULL,
	`LONGITUD` double NOT NULL,
	`DISPOSITIVO_ADQUISICION` varchar(500) not null,
	`ESTADO` bool NOT NULL,
	`FECHA_CREACION` date NOT NULL,
	`HORA_CREACION` time NOT NULL,
	`FECHA_ACTUALIZACION` date default null,
	`HORA_ACTUALIZACION` time default null, 
	primary key (ID_NODO_SENSOR)
);

/*Tabla VARIABLES_NODO_SENSOR*/
DROP TABLE IF EXISTS `VARIABLES_NODO_SENSOR`;
CREATE TABLE IF NOT EXISTS `VARIABLES_NODO_SENSOR` (
  	`ID_VARIABLE` varchar(100) NOT NULL,
	`NOMBRE_VARIABLE` varchar(300) NOT NULL,
	`DETALLES` longtext  NOT NULL,
	`TIPO_DATO` varchar(50) NOT NULL,  
	`UNIDAD_MEDIDA` varchar(10) NOT NULL,
	`RANGO_MIN` varchar(10) NOT NULL,
	`RANGO_MAX` varchar(10) NOT NULL,
	`ESTADO` bool NOT NULL,
	`FECHA_CREACION` date NOT NULL,
	`HORA_CREACION` time NOT NULL,
	`FECHA_ACTUALIZACION` date default null,
	`HORA_ACTUALIZACION` time default null,
	primary key (ID_VARIABLE, NOMBRE_VARIABLE)
);

/*Tabla CONFIGURACION_VARIABLES_NODO_SENSOR*/
DROP TABLE IF EXISTS `CONFIGURACION_VARIABLES_NODO_SENSOR`;
CREATE TABLE IF NOT EXISTS `CONFIGURACION_VARIABLES_NODO_SENSOR` (
	`ID_CONFIGURACION` varchar(100) NOT NULL,
	`ID_NODO_SENSOR` varchar(100) NOT NULL,
	`ID_VARIABLE` varchar(100) NOT NULL,
	`NOMBRE_VARIABLE` varchar(300) NOT NULL,
	`FECHA_CREACION` date NOT NULL,
	`HORA_CREACION` time NOT NULL,
	primary key (ID_CONFIGURACION),
	FOREIGN key (ID_NODO_SENSOR) REFERENCES NODO_SENSOR(ID_NODO_SENSOR) ON UPDATE CASCADE ON DELETE CASCADE,
  	FOREIGN key (ID_VARIABLE, NOMBRE_VARIABLE) REFERENCES VARIABLES_NODO_SENSOR(ID_VARIABLE, NOMBRE_VARIABLE) ON UPDATE CASCADE ON DELETE CASCADE
);

/*Tabla REGLAS_NODO_SENSOR*/
DROP TABLE IF EXISTS `REGLAS_NODO_SENSOR`;
CREATE TABLE IF NOT EXISTS `REGLAS_NODO_SENSOR` (
	`ID_REGLA` varchar(100) NOT NULL,
	`ID_NODO_SENSOR` varchar(100) NOT NULL,
	`ID_VARIABLE` varchar(100) NOT NULL,
	`NOMBRE_VARIABLE` varchar(300) NOT NULL,
    `EXPRESION` varchar(1000) NOT NULL,
	`FECHA_CREACION` date NOT NULL,
	`HORA_CREACION` time NOT NULL,
    `FECHA_ACTUALIZACION` date default null,
	`HORA_ACTUALIZACION` time default null,
	primary key (ID_REGLA),
	FOREIGN key (ID_NODO_SENSOR) REFERENCES NODO_SENSOR(ID_NODO_SENSOR),
  	FOREIGN key (ID_VARIABLE, NOMBRE_VARIABLE) REFERENCES VARIABLES_NODO_SENSOR(ID_VARIABLE, NOMBRE_VARIABLE) ON UPDATE CASCADE ON DELETE CASCADE
);

/*Tabla DATOS_NODO_SENSOR*/
DROP TABLE IF EXISTS `DATOS_NODO_SENSOR`;
CREATE TABLE IF NOT EXISTS `DATOS_NODO_SENSOR` (
	`ID_DATO` varchar(100) NOT NULL,
	`ID_NODO_SENSOR` varchar(100) NOT NULL,
	`ID_VARIABLE` varchar(100) NOT NULL,
	`NOMBRE_VARIABLE` varchar(300) NOT NULL,
	`VALOR_DATO` varchar(10) not null,
	`VALOR_NOTIFICADO` bool DEFAULT FALSE,
	`ID_REGLA` varchar(100) DEFAULT null,
	`EXPRESION_EVALUADA` varchar(300) DEFAULT NULL,
	`FECHA_CREACION` date NOT NULL,
	`HORA_CREACION` time NOT NULL,
	primary key (ID_DATO)
);

/*Tabla ERRORES_LOG_EJECUCION*/
DROP TABLE IF EXISTS `ERRORES_LOG_EJECUCION`;
CREATE TABLE IF NOT EXISTS `ERRORES_LOG_EJECUCION` (
  	`ID_ERROR` varchar(100) NOT NULL,
	`CODIGO_ERROR` varchar(100) NOT NULL,
    `URL_ENDPOINT` longtext  NOT NULL,
	`MODULO` longtext  NOT NULL,
	`ENDPOINT` varchar(100) NOT NULL,  
	`METODO_PRIMARIO` varchar(100) NOT NULL,
	`METODO_SECUNDARIO` varchar(100) NOT NULL,
	`DETALLES` longtext NOT NULL,
    `MENSAJE_PANTALLA` longtext NOT NULL,
	`FECHA_CREACION` date NOT NULL,
	`HORA_CREACION` time NOT NULL,
	`FECHA_ACTUALIZACION` date default null,
	`HORA_ACTUALIZACION` time default null,
	primary key (CODIGO_ERROR)
);

/*Tabla REPORTE_LOG_EJECUCION*/
DROP TABLE IF EXISTS `REPORTE_LOG_EJECUCION`;
CREATE TABLE IF NOT EXISTS `REPORTE_LOG_EJECUCION` (
  	`ID_REPORTE` varchar(100) NOT NULL,
	`CODIGO_ERROR` varchar(100) NOT NULL,
    `URL_ENDPOINT` longtext  NOT NULL,
	`MODULO` longtext  NOT NULL,
	`ENDPOINT` varchar(100) NOT NULL,  
	`METODO_PRIMARIO` varchar(100) NOT NULL,
	`METODO_SECUNDARIO` varchar(100) NOT NULL,
	`MENSAJE_RETORNADO` longtext NOT NULL,
	`FECHA_CREACION` date NOT NULL,
	`HORA_CREACION` time NOT NULL,
	primary key (ID_REPORTE, CODIGO_ERROR),
    FOREIGN key (CODIGO_ERROR) REFERENCES ERRORES_LOG_EJECUCION(CODIGO_ERROR) ON UPDATE CASCADE
);
